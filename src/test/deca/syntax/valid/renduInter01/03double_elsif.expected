`> [8, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [8, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [9, 8] DeclVar
      |      +> [9, 4] Identifier (int)
      |      +> [9, 8] Identifier (x)
      |      `> [9, 10] Initialization
      |         `> [9, 12] Int (4)
      `> ListInst [List with 1 elements]
         []> [10, 4] IfThenElse
             +> [10, 11] Equals
             |  +> [10, 9] Identifier (x)
             |  `> [10, 14] Int (0)
             +> ListInst [List with 1 elements]
             |  []> [11, 8] Println
             |      `> ListExpr [List with 2 elements]
             |         []> [11, 16] StringLiteral (hello if)
             |         []> [11, 28] Identifier (x)
             `> ListInst [List with 1 elements]
                []> [12, 11] IfThenElse
                    +> [12, 17] Equals
                    |  +> [12, 15] Identifier (x)
                    |  `> [12, 20] Int (3)
                    +> ListInst [List with 1 elements]
                    |  []> [13, 8] Println
                    |      `> ListExpr [List with 2 elements]
                    |         []> [13, 16] StringLiteral (hello else_if1 : )
                    |         []> [13, 37] Identifier (x)
                    `> ListInst [List with 1 elements]
                       []> [14, 11] IfThenElse
                           +> [14, 17] Equals
                           |  +> [14, 15] Identifier (x)
                           |  `> [14, 20] Int (4)
                           +> ListInst [List with 1 elements]
                           |  []> [15, 8] Println
                           |      `> ListExpr [List with 2 elements]
                           |         []> [15, 16] StringLiteral (hello else_if2 : )
                           |         []> [15, 37] Identifier (x)
                           `> ListInst [List with 0 elements]
