`> [9, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [9, 0] Main
      +> ListDeclVar [List with 2 elements]
      |  []> [10, 8] DeclVar
      |  ||  +> [10, 4] Identifier (int)
      |  ||  +> [10, 8] Identifier (x)
      |  ||  `> [10, 10] Initialization
      |  ||     `> [10, 12] Int (2)
      |  []> [11, 10] DeclVar
      |      +> [11, 4] Identifier (float)
      |      +> [11, 10] Identifier (y)
      |      `> [11, 12] Initialization
      |         `> [11, 14] Float (0.0)
      `> ListInst [List with 2 elements]
         []> [12, 4] IfThenElse
         ||  +> [12, 11] GreaterOrEqual
         ||  |  +> [12, 9] Identifier (x)
         ||  |  `> [12, 14] Identifier (y)
         ||  +> ListInst [List with 1 elements]
         ||  |  []> [13, 8] Println
         ||  |      `> ListExpr [List with 1 elements]
         ||  |         []> [13, 16] StringLiteral (ok)
         ||  `> ListInst [List with 1 elements]
         ||     []> [15, 8] Print
         ||         `> ListExpr [List with 1 elements]
         ||            []> [15, 14] StringLiteral (erreur)
         []> [17, 4] IfThenElse
             +> [17, 11] GreaterOrEqual
             |  +> [17, 9] Identifier (x)
             |  `> [17, 14] Int (2)
             +> ListInst [List with 1 elements]
             |  []> [18, 8] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [18, 16] StringLiteral (ok)
             `> ListInst [List with 1 elements]
                []> [20, 8] Print
                    `> ListExpr [List with 1 elements]
                       []> [20, 14] StringLiteral (erreur)
