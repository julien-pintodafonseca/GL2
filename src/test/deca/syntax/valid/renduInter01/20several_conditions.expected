`> [7, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [7, 0] Main
      +> ListDeclVar [List with 4 elements]
      |  []> [8, 8] DeclVar
      |  ||  +> [8, 4] Identifier (int)
      |  ||  +> [8, 8] Identifier (x)
      |  ||  `> [8, 10] Initialization
      |  ||     `> [8, 12] Int (1)
      |  []> [9, 8] DeclVar
      |  ||  +> [9, 4] Identifier (int)
      |  ||  +> [9, 8] Identifier (y)
      |  ||  `> [9, 10] Initialization
      |  ||     `> [9, 12] Int (3)
      |  []> [10, 10] DeclVar
      |  ||  +> [10, 4] Identifier (float)
      |  ||  +> [10, 10] Identifier (z)
      |  ||  `> [10, 12] Initialization
      |  ||     `> [10, 14] Float (5.2)
      |  []> [11, 11] DeclVar
      |      +> [11, 4] Identifier (string)
      |      +> [11, 11] Identifier (st)
      |      `> [11, 14] Initialization
      |         `> [11, 16] StringLiteral (hello)
      `> ListInst [List with 1 elements]
         []> [12, 4] IfThenElse
             +> [12, 41] And
             |  +> [12, 24] And
             |  |  +> [12, 16] And
             |  |  |  +> [12, 8] Not
             |  |  |  |  `> [12, 11] Equals
             |  |  |  |     +> [12, 10] Identifier (x)
             |  |  |  |     `> [12, 13] Int (1)
             |  |  |  `> [12, 20] GreaterOrEqual
             |  |  |     +> [12, 19] Identifier (y)
             |  |  |     `> [12, 22] Int (1)
             |  |  `> [12, 32] Or
             |  |     +> [12, 29] Lower
             |  |     |  +> [12, 28] Identifier (z)
             |  |     |  `> [12, 30] Int (6)
             |  |     `> [12, 36] Equals
             |  |        +> [12, 35] Identifier (z)
             |  |        `> [12, 38] Int (0)
             |  `> [12, 47] NotEquals
             |     +> [12, 44] Identifier (st)
             |     `> [12, 50] StringLiteral (goodbye)
             +> ListInst [List with 1 elements]
             |  []> [13, 8] Println
             |      `> ListExpr [List with 1 elements]
             |         []> [13, 16] StringLiteral (ok)
             `> ListInst [List with 1 elements]
                []> [15, 8] Print
                    `> ListExpr [List with 1 elements]
                       []> [15, 14] StringLiteral (erreur)
