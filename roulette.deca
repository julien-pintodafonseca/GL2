#include "Math.decah"

class Roulette {
    protected float budget = -1;
    int round = 0;
    int random = 1;

    // Accesseur de l'attribut budget
    float getBudget() {
        return budget;
    }

    // Affichage des règles du jeu
    void displayRules() {
        println("------------------------------------------------------------------------------------------------------------------------------");
        println("BIENVENUE à ma table de roulette !!!");
        println("");
        print("Vous devez choisir des numéros entre 0 et 37. ");
        println("Les numéros pairs sont de couleur noire et les numéros impairs de couleur rouge.");
        println("Lors de chaque manche, vous devez miser sur le nombre qui sortira. Attention : vous ne pouvez pas miser plus que votre budget !");

        println("A l'issue d'une manche, trois résultats sont possibles : ");
        println("			-si vous obtenez le bon numéro, vous gagnez 38 fois votre mise ;");
        println("			-si vous obtenez la bonne couleur, vous gagnez la moitié de votre mise ;");
        println("			-sinon vous perdez votre mise.");
        println("");
        println("BONNE CHANCE !");
        println("-----------------------------------------------------------------------------------------------------------------------------");
        println("");
        println("");
    }

    void initGame() {
        println("Entrez votre budget d'entrée sur la table (sous la forme x.0 dans la cas d'un entier x) : ");
        budget = readFloat();

        while (budget <= 0) {
            println("Vous ne pouvez pas jouer si vous ne misez rien !");
            println("Veuillez saisir un nombre positif non nul (sous la forme x.0 dans la cas d'un entier x) : ");
            budget = readFloat();
        }
    }

    // Déroulé d'une manche
    void roundPlay() {
        int choice = -1;
        float set = -1; // mise du tour
        int random = -1;

        round = this.round + 1;

        // Choix d'une case
        println("Veuillez entrer un nombre entier entre 0 et 37 pour choisir une case :");
        choice = readInt();

        while(choice < 0 || choice > 37) {
            println("Numéro de case invalide. Veuillez entrer un nombre entier entre 0 et 49 pour choisir une case :");
            choice = readInt();
        }

        // Choix de la mise pour la manche
        println("Quelle est votre mise pour cette manche ? Veuillez saisir un nombre positif non nul (sous la forme x.0 dans la cas d'un entier x).");
        set = readFloat();
        while(set > budget || set <= 0) {
            if(set > budget) {
                println("Vous ne pouvez pas miser plus que votre budget. Quelle est votre mise ?");
            } else {
                println("Vous ne pouvez pas jouer si vous ne misez rien ! Quelle est votre mise ?");
            }
            set = readFloat();
        }

        failureOrSuccess(this.lotteryDraw(), set, choice);
    }

    /* Tirage d'un numéro */
    int lotteryDraw() {
        int random;
        int i=0;
        int j=0;
        while (j < 30000 && i <= j) {
            if(i < j) {
                i = i + 1;
            } else {
                print(generateRandom());
                if (j < 5000) {
                    j = j + 100;
                } else if( j < 10000) {
                    j = j + 500;
                } else {
                    j = j + 2000;
                }
                i = 0;
                print("...");
            }
        }
        random = generateRandom();
        println(random, "!");
        return random % 38;
    }

    /* Génère un nombre aléatoire compris en 0 et 37
       (Standard minimal)
    */
    int generateRandom() {
        Math math = new Math();
        float tmp = 16807 * (random%127773) - 2836* (random/127773);
        if (tmp >= 0 ) {
            random = (int)(tmp);
        } else {
            random = (int)(tmp + math._pow(2, 31) -1 );
        }
        return random % 38;
    }

    // Détermine si la manche est un succès
    // et calcule le nouveau budget
    void failureOrSuccess(int random, float set, int choice) {
        if (random == choice ) {
            this.budget =  budget + (38*set);
            println("Bravo ! Vous remportez 3 fois votre mise !");
        } else if ((random % 2) == (choice % 2)) {
            budget = budget + 0.5*set;
            println("Couleur ! Vous remportez la moitié de votre mise !");
        } else {
            this.budget = this.budget - set;
            println("Pas de chance : vous perdez votre mise.");
        }
    }

    /* Retourne true si l'utilisateur souhaite jouer la manche, sinon retourne false.
       Retourne également false en cas de fin de partie. */
    boolean continue() {
        int lecture = -1;
        // S'il reste du budget, on demande à l'utilisateur s'il veut jouer la manche suivante
        if (getBudget() > 0) {
            while(lecture > 2 || lecture < 0 ) {
                println("Continuez ? Tapez : ");
                println("             - 1 pour oui ;");
                println("             - 0 pour non ;");
                println("             - 2 pour afficher les règles et continuer la partie.");
                lecture = readInt();
            }
            if (lecture == 2) {
                this.displayRules();
                return true;
            } else if (lecture == 1) {
                return true;
            } else {
                return false;
            }
        } else { // Sinon on affiche des statistiques sur la partie
            println("Vous avez perdu tout votre budget initial en : ", this.round, "manches.");
            return false;
        }
    }

    // Affichage du budget restant à jouer
    void displayBudget() {
        println("Votre budget est maintenant de : ", budget);
    }
}

{
    boolean replay = true;
    boolean firstRound; // indique s'il s'agit de la première manche du jeu
    int lecture = -1;
    int games = 0;
    Roulette play = new Roulette();
    play.displayRules();

    // Tant que l'utilisateur veut jouer
    while(replay) {
        games = games + 1 ;
        firstRound = true;

        // Déroulé d'une partie
        play.initGame();
        while(play.getBudget() > 0 && (firstRound || play.continue() )) {
            play.roundPlay();
            play.displayBudget();
            println("");
        }

        // Faire une nouvelle partie ?
        lecture = -1 ;
        while(lecture != 1 && lecture != 0) {
            println("");
            println("");
            println("Voulez vous faire une autre partie ? Tapez 1 pour oui, 0 pour non.");
            lecture = readInt();
        }
        if (lecture == 1) {
            replay = true;
        } else {
            replay = false;
        }
    }

    if(games == 1) {
        println("Merci d'avoir joué ", games, " partie de roulette :)");
    } else {
        println("Merci d'avoir joué ", games, " parties de roulette :)");
    }
}
